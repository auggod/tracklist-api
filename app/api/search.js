// Generated by LiveScript 1.4.0
(function(){
  var async, _, utils, Event, Artist, Label, Venue, User;
  async = require('async');
  _ = require('lodash');
  utils = require('../lib/utils');
  Event = require('../models/event');
  Artist = require('../models/artist');
  Label = require('../models/label');
  Venue = require('../models/venue');
  User = require('../models/user');
  module.exports = {
    events: function(req, res, next){
      var q;
      if (!(req.params.q || req.query.q)) {
        return res.sendStatus(400);
      }
      q = req.params.q || req.query.q;
      return Event.search({
        "multi_match": {
          "fields": ["act", "title", "venue"],
          "query": q,
          "fuzziness": "AUTO"
        }
      }, {
        hydrate: true,
        hydrateOptions: {
          select: 'title act venue slug permalink date'
        }
      }, function(err, results){
        var data, i$, ref$, len$, item;
        if (!results) {
          return res.sendStatus(404);
        }
        data = [];
        for (i$ = 0, len$ = (ref$ = results.hits.hits).length; i$ < len$; ++i$) {
          item = ref$[i$];
          data.push(item);
        }
        return res.json(data);
      });
    }
    /*
    events: (req, res, next) ->
    
      return res.sendStatus 400 if not (req.params.q or req.query.q)
    
      q = req.params.q or req.query.q
      q = q.split(/[\s,+]+/)
      queryArr = _.map (q), (query) ->
        '(' + _.escapeRegExp(query) + ')'
    
      r = queryArr.join '|'
      r = $regex: new RegExp(r, 'i')
    
      Event.find active: true
      .or([
        * 'act': r
        * 'title': r
        * 'tags.text': r
      ])
      .limit 10
      .exec (err, events) ->
        return next err if err
        res.json do
          events: events
    
    */,
    artists: function(req, res){
      var query, r;
      query = req.query.q;
      r = new RegExp(query, 'i');
      return Artist.find().or([{
        'name': {
          $regex: r
        }
      }]).limit(10).exec(function(err, artists){
        if (err) {
          return next(err);
        }
        return res.json({
          artists: artists
        });
      });
    },
    labels: function(req, res, next){
      var r;
      r = new RegExp(req.params.q, 'i');
      return Label.find().or([{
        'name': {
          $regex: r
        }
      }]).limit(10).exec(function(err, labels){
        if (err) {
          return next(err);
        }
        return res.json({
          labels: labels
        });
      });
    },
    venues: function(req, res, next){
      var r;
      r = new RegExp(req.params.q, 'i');
      return Venue.find().or([{
        'name': {
          $regex: r
        }
      }]).limit(10).exec(function(err, venues){
        if (err) {
          return next(err);
        }
        return res.json({
          venues: venues
        });
      });
    },
    users: function(req, res, next){
      var r;
      r = new RegExp(req.params.q, 'i');
      return User.find().select('username email name avatar lang label account_type').or([{
        'username': {
          $regex: r
        }
      }]).exec(function(err, users){
        if (err) {
          return next(err);
        }
        return res.json({
          users: users
        });
      });
    }
  };
}).call(this);
