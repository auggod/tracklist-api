// Generated by LiveScript 1.4.0
(function(){
  var mongoose, autoIncrement, slug, mongoosastic, Schema, ArtistSchema, Artist, stream, count;
  mongoose = require('mongoose');
  autoIncrement = require('mongoose-auto-increment');
  slug = require('../lib/slug');
  mongoosastic = require('mongoosastic');
  Schema = mongoose.Schema;
  autoIncrement.initialize(mongoose);
  ArtistSchema = new Schema({
    id: {
      type: Number
    },
    events: [{
      _event: {
        type: Number,
        ref: 'Event'
      }
    }],
    shortBio: String,
    longBio: String,
    text: {
      short: String,
      long: String
    },
    name: {
      type: String
    },
    spellings: [],
    links: [{
      url: String,
      name: String
    }],
    labels: [],
    label: {
      name: {
        type: String
      }
    },
    image: {
      name: {
        type: String
      }
    },
    hidden: {
      type: Boolean,
      'default': false
    },
    images: [{
      _image: {
        type: Number,
        ref: 'Image'
      }
    }],
    slug: {
      type: String,
      set: slug.setSlug,
      'default': 'slug'
    },
    updatedAt: {
      type: Date,
      'default': Date.now
    },
    createdAt: {
      type: Date,
      'default': Date.now
    }
  }, {
    strict: true
  });
  ArtistSchema.plugin(mongoosastic);
  ArtistSchema.plugin(autoIncrement.plugin, {
    model: 'Artist',
    field: 'id',
    startAt: 1,
    incrementBy: 1
  });
  Artist = mongoose.model('Artist', ArtistSchema);
  stream = Artist.synchronize();
  count = 0;
  ArtistSchema.pre('save', function(next){
    var self;
    self = this;
    return Artist.find({
      name: this.name
    }, function(err, docs){
      if (!docs.length) {
        return next();
      } else {
        console.log(self);
        return next();
      }
    });
  });
  ArtistSchema.pre('update', function(next){
    var now;
    now = new Date;
    this.updatedAt = now;
    if (!this.createdAt) {
      this.createdAt = now;
    }
    next();
  });
  module.exports = mongoose.model('Artist', ArtistSchema);
}).call(this);
